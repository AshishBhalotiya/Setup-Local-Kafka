#!/bin/bash
# ::: Code Generated by Copilot 4d5e6f78-9012-3456-789a-bcdef0123456. This comment will be removed automatically after the file is saved :::

set -e

echo "🚀 Starting Kafka Management UI (Docker Mode)"
echo "=============================================="

# Check if Docker is running
if ! docker info >/dev/null 2>&1; then
    echo "❌ Docker is not running. Please start Docker and try again."
    exit 1
fi

# Stop any existing local containers that might conflict
echo "🧹 Cleaning up any existing containers..."
docker stop kafka-local zookeeper-local 2>/dev/null || true
docker rm kafka-local zookeeper-local 2>/dev/null || true

# Build and start all services
echo "📦 Building and starting services..."
docker-compose down -v 2>/dev/null || true
docker-compose up --build -d

echo "⏳ Waiting for services to be ready..."

# Wait for Kafka to be healthy with better error handling
echo "🔍 Checking Kafka health..."
timeout=180
counter=0
while [ $counter -lt $timeout ]; do
    if docker-compose exec -T kafka kafka-broker-api-versions --bootstrap-server localhost:9092 >/dev/null 2>&1; then
        echo "✅ Kafka is ready!"
        break
    fi
    echo "⏳ Waiting for Kafka... ($counter/$timeout)"
    sleep 3
    counter=$((counter + 3))
done

if [ $counter -ge $timeout ]; then
    echo "❌ Kafka failed to start within $timeout seconds"
    echo "📋 Checking logs:"
    docker-compose logs kafka --tail=20
    exit 1
fi

# Wait for UI to be ready
echo "🔍 Checking UI health..."
timeout=20
counter=0
while [ $counter -lt $timeout ]; do
    if curl -f http://localhost:3333/api/info >/dev/null 2>&1; then
        echo "✅ UI is ready!"
        break
    fi
    echo "⏳ Waiting for UI... ($counter/$timeout)"
    sleep 3
    counter=$((counter + 3))
done

if [ $counter -ge $timeout ]; then
    echo "❌ UI failed to start within $timeout seconds"
    echo "📋 Checking logs:"
    docker-compose logs kafka-ui --tail=20
    exit 1
fi

echo ""
echo "🎉 Kafka Management UI is ready!"
echo "=================================="
echo "🌐 Open your browser and go to: http://localhost:3333"
echo ""
echo "📋 Available services:"
echo "   • Kafka UI:       http://localhost:3333"
echo "   • Kafka Broker:   localhost:9092"
echo "   • Zookeeper:      localhost:2181"
echo ""
echo "🛠️  Useful commands:"
echo "   • View logs:      docker-compose logs -f"
echo "   • Stop services:  docker-compose down"
echo "   • Restart:        docker-compose restart"
echo ""
echo "✨ Features available in the UI:"
echo "   📊 Overview Dashboard with metrics"
echo "   📝 Topic Management (create, delete, view)"
echo "   📤 Message Producer"
echo "   📥 Real-time Message Consumer"
echo "   👥 Consumer Group Monitoring"
echo "   🏥 Cluster Health Monitoring"
echo "   🌙 Light/Dark Theme Toggle"
echo ""
