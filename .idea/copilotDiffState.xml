<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/docker-compose.yml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/docker-compose.yml" />
              <option name="originalContent" value="services:&#10;  zookeeper:&#10;    image: confluentinc/cp-zookeeper:7.6.0&#10;    container_name: zookeeper&#10;    ports:&#10;      - &quot;2181:2181&quot;&#10;    environment:&#10;      ZOOKEEPER_CLIENT_PORT: 2181&#10;      ZOOKEEPER_TICK_TIME: 2000&#10;    networks:&#10;      - kafka-network&#10;    healthcheck:&#10;      test: [&quot;CMD&quot;, &quot;nc&quot;, &quot;-z&quot;, &quot;localhost&quot;, &quot;2181&quot;]&#10;      interval: 10s&#10;      timeout: 5s&#10;      retries: 5&#10;      start_period: 10s&#10;&#10;  kafka:&#10;    image: confluentinc/cp-kafka:7.6.0&#10;    container_name: kafka&#10;    depends_on:&#10;      zookeeper:&#10;        condition: service_healthy&#10;    ports:&#10;      - &quot;9092:9092&quot;&#10;    environment:&#10;      KAFKA_BROKER_ID: 1&#10;      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181&#10;      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092&#10;      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT&#10;      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL&#10;      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1&#10;      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'&#10;      KAFKA_LOG_RETENTION_HOURS: 168&#10;      KAFKA_LOG_RETENTION_BYTES: 1073741824&#10;      KAFKA_LOG_SEGMENT_BYTES: 1073741824&#10;      KAFKA_NUM_PARTITIONS: 3&#10;      KAFKA_DEFAULT_REPLICATION_FACTOR: 1&#10;      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0&#10;      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1&#10;      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1&#10;    volumes:&#10;      - kafka-data:/var/lib/kafka/data&#10;    networks:&#10;      - kafka-network&#10;    healthcheck:&#10;      test: [&quot;CMD-SHELL&quot;, &quot;kafka-broker-api-versions --bootstrap-server localhost:9092 || exit 1&quot;]&#10;      interval: 10s&#10;      timeout: 10s&#10;      retries: 10&#10;      start_period: 30s&#10;&#10;  kafka-ui:&#10;    build:&#10;      context: .&#10;      dockerfile: ui.Dockerfile&#10;    container_name: kafka-ui&#10;    depends_on:&#10;      kafka:&#10;        condition: service_healthy&#10;    ports:&#10;      - &quot;3333:3000&quot;&#10;    environment:&#10;      - KAFKA_BROKERS=kafka:29092&#10;      - NODE_ENV=production&#10;      - KAFKA_CLIENT_ID=kafka-ui-docker&#10;    networks:&#10;      - kafka-network&#10;    restart: unless-stopped&#10;    healthcheck:&#10;      test: [&quot;CMD&quot;, &quot;wget&quot;, &quot;--no-verbose&quot;, &quot;--tries=1&quot;, &quot;--spider&quot;, &quot;http://localhost:3000/api/info&quot;]&#10;      interval: 30s&#10;      timeout: 10s&#10;      retries: 3&#10;      start_period: 60s&#10;&#10;networks:&#10;  kafka-network:&#10;    driver: bridge&#10;&#10;volumes:&#10;  kafka-data:&#10;" />
              <option name="updatedContent" value="services:&#10;  zookeeper:&#10;    image: confluentinc/cp-zookeeper:7.6.0&#10;    container_name: zookeeper&#10;    ports:&#10;      - &quot;2181:2181&quot;&#10;    environment:&#10;      ZOOKEEPER_CLIENT_PORT: 2181&#10;      ZOOKEEPER_TICK_TIME: 2000&#10;    networks:&#10;      - kafka-network&#10;    healthcheck:&#10;      test: [&quot;CMD&quot;, &quot;nc&quot;, &quot;-z&quot;, &quot;localhost&quot;, &quot;2181&quot;]&#10;      interval: 10s&#10;      timeout: 5s&#10;      retries: 5&#10;      start_period: 10s&#10;&#10;  kafka:&#10;    image: confluentinc/cp-kafka:7.6.0&#10;    container_name: kafka&#10;    depends_on:&#10;      zookeeper:&#10;        condition: service_healthy&#10;    ports:&#10;      - &quot;9092:9092&quot;&#10;    environment:&#10;      KAFKA_BROKER_ID: 1&#10;      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181&#10;      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092&#10;      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT&#10;      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL&#10;      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1&#10;      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'&#10;      KAFKA_LOG_RETENTION_HOURS: 168&#10;      KAFKA_LOG_RETENTION_BYTES: 1073741824&#10;      KAFKA_LOG_SEGMENT_BYTES: 1073741824&#10;      KAFKA_NUM_PARTITIONS: 3&#10;      KAFKA_DEFAULT_REPLICATION_FACTOR: 1&#10;      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0&#10;      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1&#10;      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1&#10;    volumes:&#10;      - kafka-data:/var/lib/kafka/data&#10;    networks:&#10;      - kafka-network&#10;    healthcheck:&#10;      test: [&quot;CMD-SHELL&quot;, &quot;kafka-broker-api-versions --bootstrap-server localhost:9092 || exit 1&quot;]&#10;      interval: 10s&#10;      timeout: 10s&#10;      retries: 10&#10;      start_period: 30s&#10;&#10;  kafka-ui:&#10;    build:&#10;      context: .&#10;      dockerfile: ui.Dockerfile&#10;    container_name: kafka-ui&#10;    depends_on:&#10;      kafka:&#10;        condition: service_healthy&#10;    ports:&#10;      - &quot;3333:3000&quot;&#10;    environment:&#10;      - KAFKA_BROKERS=kafka:29092&#10;      - NODE_ENV=production&#10;      - KAFKA_CLIENT_ID=kafka-ui-docker&#10;    networks:&#10;      - kafka-network&#10;    restart: unless-stopped&#10;    healthcheck:&#10;      test: [&quot;CMD&quot;, &quot;wget&quot;, &quot;--no-verbose&quot;, &quot;--tries=1&quot;, &quot;--spider&quot;, &quot;http://localhost:3000/api/info&quot;]&#10;      interval: 30s&#10;      timeout: 10s&#10;      retries: 3&#10;      start_period: 60s&#10;&#10;networks:&#10;  kafka-network:&#10;    driver: bridge&#10;&#10;volumes:&#10;  kafka-data:" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>